/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/verify-minikit-proof/route";
exports.ids = ["app/api/verify-minikit-proof/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fverify-minikit-proof%2Froute&page=%2Fapi%2Fverify-minikit-proof%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fverify-minikit-proof%2Froute.ts&appDir=C%3A%5CUsers%5Ccrisb%5CDocuments%5CGitHub%5CHackaton%5Cmicrocreditos%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ccrisb%5CDocuments%5CGitHub%5CHackaton%5Cmicrocreditos&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fverify-minikit-proof%2Froute&page=%2Fapi%2Fverify-minikit-proof%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fverify-minikit-proof%2Froute.ts&appDir=C%3A%5CUsers%5Ccrisb%5CDocuments%5CGitHub%5CHackaton%5Cmicrocreditos%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ccrisb%5CDocuments%5CGitHub%5CHackaton%5Cmicrocreditos&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_crisb_Documents_GitHub_Hackaton_microcreditos_src_app_api_verify_minikit_proof_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/verify-minikit-proof/route.ts */ \"(rsc)/./src/app/api/verify-minikit-proof/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/verify-minikit-proof/route\",\n        pathname: \"/api/verify-minikit-proof\",\n        filename: \"route\",\n        bundlePath: \"app/api/verify-minikit-proof/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\crisb\\\\Documents\\\\GitHub\\\\Hackaton\\\\microcreditos\\\\src\\\\app\\\\api\\\\verify-minikit-proof\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_crisb_Documents_GitHub_Hackaton_microcreditos_src_app_api_verify_minikit_proof_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZ2ZXJpZnktbWluaWtpdC1wcm9vZiUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGdmVyaWZ5LW1pbmlraXQtcHJvb2YlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZ2ZXJpZnktbWluaWtpdC1wcm9vZiUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNjcmlzYiU1Q0RvY3VtZW50cyU1Q0dpdEh1YiU1Q0hhY2thdG9uJTVDbWljcm9jcmVkaXRvcyU1Q3NyYyU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDY3Jpc2IlNUNEb2N1bWVudHMlNUNHaXRIdWIlNUNIYWNrYXRvbiU1Q21pY3JvY3JlZGl0b3MmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQzJEO0FBQ3hJO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCJDOlxcXFxVc2Vyc1xcXFxjcmlzYlxcXFxEb2N1bWVudHNcXFxcR2l0SHViXFxcXEhhY2thdG9uXFxcXG1pY3JvY3JlZGl0b3NcXFxcc3JjXFxcXGFwcFxcXFxhcGlcXFxcdmVyaWZ5LW1pbmlraXQtcHJvb2ZcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3ZlcmlmeS1taW5pa2l0LXByb29mL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdmVyaWZ5LW1pbmlraXQtcHJvb2ZcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3ZlcmlmeS1taW5pa2l0LXByb29mL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcVXNlcnNcXFxcY3Jpc2JcXFxcRG9jdW1lbnRzXFxcXEdpdEh1YlxcXFxIYWNrYXRvblxcXFxtaWNyb2NyZWRpdG9zXFxcXHNyY1xcXFxhcHBcXFxcYXBpXFxcXHZlcmlmeS1taW5pa2l0LXByb29mXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgd29ya0FzeW5jU3RvcmFnZSxcbiAgICAgICAgd29ya1VuaXRBc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fverify-minikit-proof%2Froute&page=%2Fapi%2Fverify-minikit-proof%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fverify-minikit-proof%2Froute.ts&appDir=C%3A%5CUsers%5Ccrisb%5CDocuments%5CGitHub%5CHackaton%5Cmicrocreditos%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ccrisb%5CDocuments%5CGitHub%5CHackaton%5Cmicrocreditos&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/verify-minikit-proof/route.ts":
/*!***************************************************!*\
  !*** ./src/app/api/verify-minikit-proof/route.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n// src/app/api/verify-minikit-proof/route.ts\n\n\n// Este es el hash precalculado para un signal vacío (\"\") según ejemplos de World ID V2\nconst EMPTY_SIGNAL_HASH = \"0x00c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4\";\n// Si necesitas hashear signals dinámicos en el backend, considera instalar @worldcoin/idkit y usar:\n// import { encodeSignal } from '@worldcoin/idkit';\n// const dynamic_signal_hash = encodeSignal(signal).toString();\nasync function POST(request) {\n    console.log(\"API /api/verify-minikit-proof (V2 LOGIC, Corrected): Solicitud recibida.\");\n    try {\n        const body = await request.json();\n        console.log(\"API /api/verify-minikit-proof: Cuerpo de la solicitud parseado:\", JSON.stringify(body, null, 2));\n        if (!body || typeof body !== 'object') {\n            console.error(\"API /api/verify-minikit-proof: Cuerpo de la solicitud vacío o no es un objeto.\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: 'Cuerpo de la solicitud vacío o inválido.'\n            }, {\n                status: 400\n            });\n        }\n        const { worldIdProofData, action, signal = \"\" } = body;\n        if (!worldIdProofData || typeof worldIdProofData !== 'object' || !worldIdProofData.merkle_root || !worldIdProofData.nullifier_hash || !worldIdProofData.proof || !worldIdProofData.verification_level || !action) {\n            console.error(\"API /api/verify-minikit-proof: Faltan campos críticos en worldIdProofData o action.\", {\n                worldIdProofData,\n                action\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: 'worldIdProofData (con merkle_root, nullifier_hash, proof, verification_level) y action son requeridos.'\n            }, {\n                status: 400\n            });\n        }\n        console.log(\"API /api/verify-minikit-proof: Payload procesado OK. Action:\", action, \"Verification Level:\", worldIdProofData.verification_level);\n        const serverSideAppId = process.env.WORLD_ID_APP_ID;\n        if (!serverSideAppId) {\n            console.error(\"API /api/verify-minikit-proof: FATAL - WORLD_ID_APP_ID (backend) no configurado.\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: \"Error config servidor: Falta World ID App ID.\"\n            }, {\n                status: 500\n            });\n        }\n        const worldIdVerifyUrl = `https://developer.worldcoin.org/api/v2/verify/${serverSideAppId}`;\n        // Log CLAVE para verificar la URL ANTES del fetch\n        console.log(\"API /api/verify-minikit-proof: URL para World ID /v2/verify (ANTES DEL FETCH):\", worldIdVerifyUrl);\n        let signal_hash_to_send;\n        if (signal.trim() === \"\") {\n            signal_hash_to_send = EMPTY_SIGNAL_HASH;\n            console.log(\"API /api/verify-minikit-proof: Usando EMPTY_SIGNAL_HASH para signal vacío.\");\n        } else {\n            // Aquí necesitarías la función encodeSignal si manejas signals no vacíos.\n            // Por ahora, si no es vacío, esta implementación fallará o enviará un hash incorrecto.\n            console.warn(\"API /api/verify-minikit-proof: Signal NO VACÍO recibido ('\", signal, \"') pero se usará EMPTY_SIGNAL_HASH. ¡Esto SOLO es correcto si el signal que generó el proof también fue efectivamente tratado como vacío para el hash o si la librería cliente ya lo hasheó y envió el hash aquí como 'signal'!\");\n            // Si el `signal` que llega del cliente YA ES un hash, úsalo directamente.\n            // Si es un string crudo y no es vacío, necesitas hashearlo (ej. con encodeSignal).\n            // Para la prueba actual con signal vacío del frontend, EMPTY_SIGNAL_HASH está bien.\n            signal_hash_to_send = EMPTY_SIGNAL_HASH; // Asumiendo que el frontend envía signal vacío por ahora.\n        }\n        const worldIdRequestBody = {\n            merkle_root: worldIdProofData.merkle_root,\n            nullifier_hash: worldIdProofData.nullifier_hash,\n            proof: worldIdProofData.proof,\n            verification_level: worldIdProofData.verification_level,\n            action: action,\n            signal_hash: signal_hash_to_send\n        };\n        console.log(\"API /api/verify-minikit-proof: Cuerpo para World ID /v2/verify:\", JSON.stringify(worldIdRequestBody, null, 2));\n        const verifyRes = await fetch(worldIdVerifyUrl, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(worldIdRequestBody)\n        });\n        console.log(\"API /api/verify-minikit-proof: Código de estado de respuesta de World ID:\", verifyRes.status);\n        console.log(\"API /api/verify-minikit-proof: Texto de estado de respuesta de World ID:\", verifyRes.statusText);\n        const responseTextFromWorldID = await verifyRes.text();\n        console.log(\"API /api/verify-minikit-proof: Texto crudo de respuesta de World ID (primeros 1000 chars):\", responseTextFromWorldID.substring(0, 1000));\n        if (!verifyRes.ok) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: `Error del servicio World ID: ${verifyRes.status} ${verifyRes.statusText}`,\n                worldIdResponseDetails: responseTextFromWorldID.substring(0, 1000)\n            }, {\n                status: verifyRes.status\n            });\n        }\n        let verifyJson;\n        try {\n            verifyJson = JSON.parse(responseTextFromWorldID);\n        } catch (e) {\n            console.error(\"API /api/verify-minikit-proof: Fallo al parsear JSON de World ID:\", responseTextFromWorldID, e);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: 'Respuesta de World ID no fue JSON válido aunque el status fue OK.',\n                rawResponse: responseTextFromWorldID.substring(0, 1000)\n            }, {\n                status: 500\n            });\n        }\n        console.log(\"API /api/verify-minikit-proof: JSON parseado de World ID:\", verifyJson);\n        // Para V2, la respuesta 200 OK tiene \"success\": true según la documentación que compartiste.\n        if (!verifyJson.success) {\n            console.error(\"API /api/verify-minikit-proof: Verificación fallida según JSON de World ID (success: false o ausente).\", verifyJson);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: verifyJson.detail || 'La verificación con World ID falló (indicado en su respuesta JSON).',\n                worldIdError: {\n                    code: verifyJson.code,\n                    detail: verifyJson.detail,\n                    attribute: verifyJson.attribute\n                }\n            }, {\n                status: 400\n            });\n        }\n        const nullifierHash = verifyJson.nullifier_hash;\n        if (!nullifierHash) {\n            console.error(\"API /api/verify-minikit-proof: Verificación World ID OK pero sin nullifier_hash:\", verifyJson);\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: \"Error: nullifier_hash no recibido de World ID.\"\n            }, {\n                status: 500\n            });\n        }\n        console.log(\"API /api/verify-minikit-proof: Verificación con World ID exitosa. NullifierHash:\", nullifierHash);\n        // --- INICIO LÓGICA DE BASE DE DATOS ---\n        console.log(\"API /api/verify-minikit-proof: Intentando conectar a MongoDB...\");\n        const { db } = await (0,_lib_mongodb__WEBPACK_IMPORTED_MODULE_1__.connectToDatabase)();\n        console.log(\"API /api/verify-minikit-proof: Conectado a MongoDB. Buscando/creando usuario...\");\n        const usersCollection = db.collection('users');\n        let user = await usersCollection.findOne({\n            worldIdNullifierHash: nullifierHash\n        });\n        const accessAction = \"test03\";\n        if (!accessAction) {\n            console.error(\"API /api/verify-minikit-proof: FATAL - NEXT_PUBLIC_WORLD_ID_ACCESS_ACTION no configurado.\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: \"Error de config: Action ID de acceso no definido.\"\n            }, {\n                status: 500\n            });\n        }\n        if (!user) {\n            if (action === accessAction) {\n                console.log(\"API /api/verify-minikit-proof: Creando nuevo usuario para la acción de acceso:\", action);\n                const newUserDocument = {\n                    worldIdNullifierHash: nullifierHash,\n                    balances: {\n                        wld: 0,\n                        usdc: 0,\n                        flexibleSavings: 0,\n                        currentFlexibleInterestRate: 0.01\n                    },\n                    createdAt: new Date(),\n                    updatedAt: new Date()\n                };\n                const insertResult = await usersCollection.insertOne(newUserDocument);\n                user = await usersCollection.findOne({\n                    _id: insertResult.insertedId\n                });\n                console.log(\"API /api/verify-minikit-proof: Nuevo usuario creado con ID:\", user?._id);\n            } else {\n                console.warn(`API /api/verify-minikit-proof: Acción \"${action}\" por usuario no encontrado. Requiere acción de acceso (\"${accessAction}\") primero.`);\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    message: 'Usuario no encontrado. Completa el acceso general primero para esta acción.',\n                    verifiedByWorldId: true,\n                    worldIdResponse: verifyJson\n                }, {\n                    status: 403\n                });\n            }\n        } else {\n            await usersCollection.updateOne({\n                worldIdNullifierHash: nullifierHash\n            }, {\n                $set: {\n                    updatedAt: new Date()\n                }\n            });\n            console.log(\"API /api/verify-minikit-proof: 'updatedAt' para usuario existente:\", user._id);\n        }\n        if (!user) {\n            console.error(\"API /api/verify-minikit-proof: Crítico - Usuario no disponible tras operaciones BD.\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: true,\n                message: 'El usuario no pudo ser procesado en la base de datos después de una verificación exitosa.',\n                verifiedByWorldId: true,\n                worldIdResponse: verifyJson\n            }, {\n                status: 500\n            });\n        }\n        const { _id, ...userData } = user;\n        // --- FIN LÓGICA DE BASE DE DATOS ---\n        console.log(\"API /api/verify-minikit-proof: Proceso finalizado con éxito para nullifier:\", nullifierHash);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: 'Identidad verificada y procesada exitosamente.',\n            user: userData,\n            nullifierHash,\n            worldIdResponse: verifyJson\n        }, {\n            status: 200\n        });\n    } catch (error) {\n        console.error(\"API /api/verify-minikit-proof: Error GENERAL CATCH (inesperado):\", error);\n        if (error instanceof SyntaxError && error.message.includes(\"JSON\")) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                message: 'Error: El cuerpo de la solicitud no es un JSON válido o está vacío.'\n            }, {\n                status: 400\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            message: 'Error Interno del Servidor.',\n            errorDetails: error.message || String(error)\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/verify-minikit-proof/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb.ts":
/*!****************************!*\
  !*** ./src/lib/mongodb.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   connectToDatabase: () => (/* binding */ connectToDatabase)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n// src/lib/mongodb.ts\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nconst MONGODB_DB = process.env.MONGODB_DB_NAME; // Cambié el nombre para evitar confusión con el cliente\nif (!MONGODB_URI) {\n    throw new Error('Please define the MONGODB_URI environment variable inside .env.local');\n}\nif (!MONGODB_DB) {\n    throw new Error('Please define the MONGODB_DB_NAME environment variable inside .env.local');\n}\n// En desarrollo, usamos una variable global para preservar el valor\n// a través de recargas de módulos causadas por HMR (Hot Module Replacement).\nlet cachedClient = null;\nlet cachedDb = null;\nasync function connectToDatabase() {\n    if (cachedClient && cachedDb) {\n        return {\n            client: cachedClient,\n            db: cachedDb\n        };\n    }\n    const client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(MONGODB_URI); // El ! es para asegurar a TS que no será undefined aquí debido a la validación previa\n    try {\n        await client.connect();\n        console.log(\"Successfully connected to MongoDB Atlas.\");\n        const db = client.db(MONGODB_DB);\n        cachedClient = client;\n        cachedDb = db;\n        return {\n            client,\n            db\n        };\n    } catch (e) {\n        console.error(\"Failed to connect to MongoDB\", e);\n        // Si la conexión falla, no caches el cliente para intentar reconectar la próxima vez\n        cachedClient = null;\n        cachedDb = null;\n        throw e; // Relanza el error para que el llamador lo maneje\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21vbmdvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEscUJBQXFCO0FBQ3FCO0FBRTFDLE1BQU1DLGNBQWNDLFFBQVFDLEdBQUcsQ0FBQ0YsV0FBVztBQUMzQyxNQUFNRyxhQUFhRixRQUFRQyxHQUFHLENBQUNFLGVBQWUsRUFBRSx3REFBd0Q7QUFFeEcsSUFBSSxDQUFDSixhQUFhO0lBQ2QsTUFBTSxJQUFJSyxNQUFNO0FBQ3BCO0FBRUEsSUFBSSxDQUFDRixZQUFZO0lBQ2IsTUFBTSxJQUFJRSxNQUFNO0FBQ3BCO0FBRUEsb0VBQW9FO0FBQ3BFLDZFQUE2RTtBQUM3RSxJQUFJQyxlQUFtQztBQUN2QyxJQUFJQyxXQUFzQjtBQU9uQixlQUFlQztJQUNsQixJQUFJRixnQkFBZ0JDLFVBQVU7UUFDMUIsT0FBTztZQUFFRSxRQUFRSDtZQUFjSSxJQUFJSDtRQUFTO0lBQ2hEO0lBRUEsTUFBTUUsU0FBUyxJQUFJVixnREFBV0EsQ0FBQ0MsY0FBZSxzRkFBc0Y7SUFFcEksSUFBSTtRQUNBLE1BQU1TLE9BQU9FLE9BQU87UUFDcEJDLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE1BQU1ILEtBQUtELE9BQU9DLEVBQUUsQ0FBQ1A7UUFFckJHLGVBQWVHO1FBQ2ZGLFdBQVdHO1FBRVgsT0FBTztZQUFFRDtZQUFRQztRQUFHO0lBQ3hCLEVBQUUsT0FBT0ksR0FBRztRQUNSRixRQUFRRyxLQUFLLENBQUMsZ0NBQWdDRDtRQUM5QyxxRkFBcUY7UUFDckZSLGVBQWU7UUFDZkMsV0FBVztRQUNYLE1BQU1PLEdBQUcsa0RBQWtEO0lBQy9EO0FBQ0oiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcY3Jpc2JcXERvY3VtZW50c1xcR2l0SHViXFxIYWNrYXRvblxcbWljcm9jcmVkaXRvc1xcc3JjXFxsaWJcXG1vbmdvZGIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2xpYi9tb25nb2RiLnRzXHJcbmltcG9ydCB7IE1vbmdvQ2xpZW50LCBEYiB9IGZyb20gJ21vbmdvZGInO1xyXG5cclxuY29uc3QgTU9OR09EQl9VUkkgPSBwcm9jZXNzLmVudi5NT05HT0RCX1VSSTtcclxuY29uc3QgTU9OR09EQl9EQiA9IHByb2Nlc3MuZW52Lk1PTkdPREJfREJfTkFNRTsgLy8gQ2FtYmnDqSBlbCBub21icmUgcGFyYSBldml0YXIgY29uZnVzacOzbiBjb24gZWwgY2xpZW50ZVxyXG5cclxuaWYgKCFNT05HT0RCX1VSSSkge1xyXG4gICAgdGhyb3cgbmV3IEVycm9yKCdQbGVhc2UgZGVmaW5lIHRoZSBNT05HT0RCX1VSSSBlbnZpcm9ubWVudCB2YXJpYWJsZSBpbnNpZGUgLmVudi5sb2NhbCcpO1xyXG59XHJcblxyXG5pZiAoIU1PTkdPREJfREIpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcignUGxlYXNlIGRlZmluZSB0aGUgTU9OR09EQl9EQl9OQU1FIGVudmlyb25tZW50IHZhcmlhYmxlIGluc2lkZSAuZW52LmxvY2FsJyk7XHJcbn1cclxuXHJcbi8vIEVuIGRlc2Fycm9sbG8sIHVzYW1vcyB1bmEgdmFyaWFibGUgZ2xvYmFsIHBhcmEgcHJlc2VydmFyIGVsIHZhbG9yXHJcbi8vIGEgdHJhdsOpcyBkZSByZWNhcmdhcyBkZSBtw7NkdWxvcyBjYXVzYWRhcyBwb3IgSE1SIChIb3QgTW9kdWxlIFJlcGxhY2VtZW50KS5cclxubGV0IGNhY2hlZENsaWVudDogTW9uZ29DbGllbnQgfCBudWxsID0gbnVsbDtcclxubGV0IGNhY2hlZERiOiBEYiB8IG51bGwgPSBudWxsO1xyXG5cclxuaW50ZXJmYWNlIENvbm5lY3RUb0RhdGFiYXNlUmVzdWx0IHtcclxuICAgIGNsaWVudDogTW9uZ29DbGllbnQ7XHJcbiAgICBkYjogRGI7XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjb25uZWN0VG9EYXRhYmFzZSgpOiBQcm9taXNlPENvbm5lY3RUb0RhdGFiYXNlUmVzdWx0PiB7XHJcbiAgICBpZiAoY2FjaGVkQ2xpZW50ICYmIGNhY2hlZERiKSB7XHJcbiAgICAgICAgcmV0dXJuIHsgY2xpZW50OiBjYWNoZWRDbGllbnQsIGRiOiBjYWNoZWREYiB9O1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0IGNsaWVudCA9IG5ldyBNb25nb0NsaWVudChNT05HT0RCX1VSSSEpOyAvLyBFbCAhIGVzIHBhcmEgYXNlZ3VyYXIgYSBUUyBxdWUgbm8gc2Vyw6EgdW5kZWZpbmVkIGFxdcOtIGRlYmlkbyBhIGxhIHZhbGlkYWNpw7NuIHByZXZpYVxyXG5cclxuICAgIHRyeSB7XHJcbiAgICAgICAgYXdhaXQgY2xpZW50LmNvbm5lY3QoKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlN1Y2Nlc3NmdWxseSBjb25uZWN0ZWQgdG8gTW9uZ29EQiBBdGxhcy5cIik7XHJcbiAgICAgICAgY29uc3QgZGIgPSBjbGllbnQuZGIoTU9OR09EQl9EQiEpO1xyXG5cclxuICAgICAgICBjYWNoZWRDbGllbnQgPSBjbGllbnQ7XHJcbiAgICAgICAgY2FjaGVkRGIgPSBkYjtcclxuXHJcbiAgICAgICAgcmV0dXJuIHsgY2xpZW50LCBkYiB9O1xyXG4gICAgfSBjYXRjaCAoZSkge1xyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gY29ubmVjdCB0byBNb25nb0RCXCIsIGUpO1xyXG4gICAgICAgIC8vIFNpIGxhIGNvbmV4acOzbiBmYWxsYSwgbm8gY2FjaGVzIGVsIGNsaWVudGUgcGFyYSBpbnRlbnRhciByZWNvbmVjdGFyIGxhIHByw7N4aW1hIHZlelxyXG4gICAgICAgIGNhY2hlZENsaWVudCA9IG51bGw7XHJcbiAgICAgICAgY2FjaGVkRGIgPSBudWxsO1xyXG4gICAgICAgIHRocm93IGU7IC8vIFJlbGFuemEgZWwgZXJyb3IgcGFyYSBxdWUgZWwgbGxhbWFkb3IgbG8gbWFuZWplXHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOlsiTW9uZ29DbGllbnQiLCJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJNT05HT0RCX0RCIiwiTU9OR09EQl9EQl9OQU1FIiwiRXJyb3IiLCJjYWNoZWRDbGllbnQiLCJjYWNoZWREYiIsImNvbm5lY3RUb0RhdGFiYXNlIiwiY2xpZW50IiwiZGIiLCJjb25uZWN0IiwiY29uc29sZSIsImxvZyIsImUiLCJlcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fverify-minikit-proof%2Froute&page=%2Fapi%2Fverify-minikit-proof%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fverify-minikit-proof%2Froute.ts&appDir=C%3A%5CUsers%5Ccrisb%5CDocuments%5CGitHub%5CHackaton%5Cmicrocreditos%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ccrisb%5CDocuments%5CGitHub%5CHackaton%5Cmicrocreditos&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();